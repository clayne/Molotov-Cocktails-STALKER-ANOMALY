valid_traders = {
    [trader_autoinject.SUPPLIER] = true,
}

trade_table = {}
trade_table["freedom"] = {
    [1] = {
        ["molotov_cocktail"] = {2, 0.66}, 
    },
    [2] = {
        ["molotov_cocktail"] = {3, 0.88}, 
    },
    [3] = {
        ["molotov_cocktail"] = {3, 1}, 
    },
}
trade_table["stalker"] = trade_table["freedom"]
trade_table["bandit"] = trade_table["freedom"]
trade_table["csky"] = trade_table["freedom"]
trade_table["renegade"] = trade_table["freedom"]
trade_table["greh"] = trade_table["freedom"]

function max_supply_level_items(trader_table)
    for i = 5, 1, -1 do
        if trader_table[i] then
            return trader_table[i]
        end
    end
end

local furniture = {
    ["esc_m_trader"] = true,
    ["red_m_lesnik"] = true
}

function molotov_spawn(npc)

    local trader = trader_autoinject.get_trader_type(npc)
    if not valid_traders[trader] then return end

    local community = 
        (trader_autoinject.get_real_community and trader_autoinject.get_real_community(npc))
        or ((furniture[npc:section()] or furniture[npc:name()]) and "stalker")
        or character_community(npc)
    if not community then return end

    local trader_table = trade_table[community]
    if not trader_table then return end

    local items = max_supply_level_items(trader_table)
    if not items then return end
    
    local spawn_items = {}
    for sec, item_props in pairs(items) do
        for i = 1, item_props[1] do
            if math.random() < item_props[2] then
                if not spawn_items[sec] then spawn_items[sec] = 0 end
                spawn_items[sec] = spawn_items[sec] + 1
            end
        end
    end
    trader_autoinject.spawn_items(npc, spawn_items)
end

TraderAuto = trader_autoinject.update
function trader_autoinject.update(npc)
    TraderAuto(npc)
    molotov_spawn(npc)
end